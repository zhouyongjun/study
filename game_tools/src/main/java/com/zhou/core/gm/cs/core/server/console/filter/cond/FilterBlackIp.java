package  com.zhou.core.gm.cs.core.server.console.filter.cond;import org.apache.mina.core.filterchain.IoFilterAdapter;import org.apache.mina.core.session.IoSession;import com.zhou.core.gm.cs.core.server.GmServer;import com.zhou.core.gm.cs.core.server.console.GmConfig;import com.zhou.core.gm.cs.core.server.console.filter.codec.AbstractGmResp;import com.zhou.core.gm.cs.core.server.console.filter.codec.DefaultGmResp;/** * IP限制过滤器 限制连接请求的IP * @author zhouyongjun * */public class FilterBlackIp extends IoFilterAdapter {		@Override		public void messageReceived(NextFilter nextFilter, IoSession session,				Object message) throws Exception {			//IP判断处理			if (!isBlack(session)) {				nextFilter.messageReceived(session, message);			}else {				//处理				illegal(session);			}		}		private void illegal(IoSession session) {			DefaultGmResp response = new DefaultGmResp(0x00001);			response.setResult(AbstractGmResp.RESULT_FAIL);			response.setResultMsg("此IP["+session.getRemoteAddress()+"]非法");			GmServer.getInstance().getGmMgr().sendMessageToClinet(session,response);		}		private boolean isBlack(IoSession session) {			String address =session.getRemoteAddress().toString();			System.out.println("isBlack:" + session.getRemoteAddress().toString());			if (address.startsWith("/10.80.")) {				return false;			}			String[] arrays = GmConfig.getStringArrays(GmConfig.KEY_LIMIT_LOGIN_IPS, ";");			if (arrays == null || arrays.length == 0) {				return false;			}			for (String str : arrays) {				if (address.contains(str)) {					return false;				}			}			return true;		}	}